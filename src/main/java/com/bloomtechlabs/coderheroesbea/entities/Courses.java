package com.bloomtechlabs.coderheroesbea.entities;

import org.hibernate.annotations.Type;

import javax.persistence.*;
import java.sql.Time;
import java.util.Date;
import java.util.List;

@Entity
@Table(name = "courses")
public class Courses {
    private int course_id;
    private String course_name;
    private String course_description;
    private Date created_on;
    private String[] days_of_week;
    private int max_size;
    private int enrolled_students;
    private int min_age;
    private int max_age;
    private Instructors instructor;
    private Programs program;
    private Time start_time;
    private Time end_time;
    private Date start_date;
    private Date end_date;
    private int number_of_sessions;
    private String difficulty;
    private String session_type;
    private String syllabus_link;

    /**
     * Constructor.
     * Default constructor is required to have Hibernate initialize the entity.
     */
    public Courses() {

    }

    /**
     * Constructor with course_id.
     * @param course_id - primary key, auto-increments, generated by database.
     */
    public Courses(int course_id) {
        this.course_id = course_id;
    }

    /**
     * Constructor with all fields.
     * @param course_id - primary key, auto-increments, generated by database.
     * @param course_name - string
     * @param course_description - string
     * @param created_on - date
     * @param days_of_week - array[strings]
     * @param max_size - integer
     * @param enrolled_students - integer
     * @param min_age - integer
     * @param max_age - integer
     * @param instructor - foreign key (table 'instructors')
     * @param program - foreign key (table 'programs')
     * @param start_time - time
     * @param end_time - time
     * @param start_date - date
     * @param end_date - date
     * @param number_of_sessions - integer
     * @param difficulty - string
     * @param session_type - string
     * @param syllabus_link - string
     */
    public Courses(int course_id, String course_name, String course_description, Date created_on,
                   String[] days_of_week, int max_size, int enrolled_students, int min_age,
                   int max_age, Instructors instructor, Programs program, Time start_time,
                   Time end_time, Date start_date, Date end_date, int number_of_sessions,
                   String difficulty, String session_type, String syllabus_link) {
        this.course_id = course_id;
        this.course_name = course_name;
        this.course_description = course_description;
        this.created_on = created_on;
        this.days_of_week = days_of_week;
        this.max_size = max_size;
        this.enrolled_students = enrolled_students;
        this.min_age = min_age;
        this.max_age = max_age;
        this.instructor = instructor;
        this.program = program;
        this.start_time = start_time;
        this.end_time = end_time;
        this.start_date = start_date;
        this.end_date = end_date;
        this.number_of_sessions = number_of_sessions;
        this.difficulty = difficulty;
        this.session_type = session_type;
        this.syllabus_link = syllabus_link;
    }
    @Id
    @Column(name = "course_id")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public int getCourse_id() {
        return course_id;
    }

    public void setCourse_id(int course_id) {
        this.course_id = course_id;
    }

    @Column(name = "course_name", nullable = false)
    public String getCourse_name() {
        return course_name;
    }

    public void setCourse_name(String course_name) {
        this.course_name = course_name;
    }

    @Column(name = "course_description", nullable = false)
    public String getCourse_description() {
        return course_description;
    }

    public void setCourse_description(String course_description) {
        this.course_description = course_description;
    }

    @Column(name = "created_on", columnDefinition = "date default CURRENT_TIMESTAMP")
    public Date getCreated_on() {
        return created_on;
    }

    public void setCreated_on(Date created_on) {
        this.created_on = created_on;
    }

    //@ElementCollection
    //@OrderColumn
    //@Column(name = "days_of_week", columnDefinition = "text[]", nullable = false)


    //@Column(name = "days_of_week", nullable = false)
    @Column(name = "days_of_week", columnDefinition = "text[]")
    @Type(type = "com.bloomtechlabs.coderheroesbea.hibernate.PostgreSqlStringArrayType")
    public String[] getDays_of_week() {
        return days_of_week;
    }

    public void setDays_of_week(String[] days_of_week) {
        this.days_of_week = days_of_week;
    }
    @Column(name = "max_size", nullable = false)
    public int getMax_size() {
        return max_size;
    }

    public void setMax_size(int max_size) {
        this.max_size = max_size;
    }
    @Column(name = "enrolled_students", nullable = false)
    public int getEnrolled_students() {
        return enrolled_students;
    }

    public void setEnrolled_students(int enrolled_students) {
        this.enrolled_students = enrolled_students;
    }
    @Column(name = "min_age", nullable = false)
    public int getMin_age() {
        return min_age;
    }

    public void setMin_age(int min_age) {
        this.min_age = min_age;
    }
    @Column(name = "max_age", nullable = false)
    public int getMax_age() {
        return max_age;
    }

    public void setMax_age(int max_age) {
        this.max_age = max_age;
    }
    @ManyToOne(cascade = CascadeType.REMOVE)
    @JoinColumn(name ="instructor_id", referencedColumnName = "instructor_id", nullable = false)
    public Instructors getInstructor() {
        return instructor;
    }

    public void setInstructor(Instructors instructor) {
        this.instructor = instructor;
    }
    @ManyToOne(cascade = CascadeType.REMOVE)
    @JoinColumn(name ="program_id", referencedColumnName = "program_id", nullable = false)
    public Programs getProgram() {
        return program;
    }

    public void setProgram(Programs program) {
        this.program = program;
    }
    @Column(name = "start_time", columnDefinition = "time", nullable = false)
    public Time getStart_time() {
        return start_time;
    }

    public void setStart_time(Time start_time) {
        this.start_time = start_time;
    }
    @Column(name = "end_time", columnDefinition = "time", nullable = false)
    public Time getEnd_time() {
        return end_time;
    }

    public void setEnd_time(Time end_time) {
        this.end_time = end_time;
    }
    @Column(name = "start_date", columnDefinition = "date", nullable = false)
    public Date getStart_date() {
        return start_date;
    }

    public void setStart_date(Date start_date) {
        this.start_date = start_date;
    }
    @Column(name = "end_date", columnDefinition = "date", nullable = false)
    public Date getEnd_date() {
        return end_date;
    }

    public void setEnd_date(Date end_date) {
        this.end_date = end_date;
    }
    @Column(name = "number_of_sessions", nullable = false)
    public int getNumber_of_sessions() {
        return number_of_sessions;
    }

    public void setNumber_of_sessions(int number_of_sessions) {
        this.number_of_sessions = number_of_sessions;
    }
    @Column(name = "difficulty", nullable = false)
    public String getDifficulty() {
        return difficulty;
    }

    public void setDifficulty(String difficulty) {
        this.difficulty = difficulty;
    }
    @Column(name = "session_type", nullable = false)
    public String getSession_type() {
        return session_type;
    }

    public void setSession_type(String session_type) {
        this.session_type = session_type;
    }
    @Column(name = "syllabus_link")
    public String getSyllabus_link() {
        return syllabus_link;
    }

    public void setSyllabus_link(String syllabus_link) {
        this.syllabus_link = syllabus_link;
    }
}
